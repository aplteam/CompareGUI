 Run homePath;key;name1;name2;p;WS1;WS2;ref1;ref2;form;n;G;cs;ref;buff;parms
 :If 0=##.⎕NC'Compare'
 :AndIf 0<≢homePath
     ⍝ When running as a user command we must make sure that all required packages are available
     ⎕SE.Tatin.LoadDependencies(homePath,'/packages')##
 :EndIf
 G←GetRegistryData
 :If (⎕SE.⎕NC'HoldWorkspaces')∊(1+⍳16)~9
     '⎕SE.HoldWorkspaces already exists but is not a namespace'⎕SIGNAL 11
 :EndIf
 :If 9=⎕SE.⎕NC'HoldWorkspaces'
 :AndIf 2≠+/0≠↑¨⎕SE.HoldWorkspaces.⎕NC¨'_',¨G.(nickname1 nickname2)
     ⎕EX'⎕SE.HoldWorkspaces'
 :EndIf
 n←CreatGui G
 Warning n
 :If DQ n.theForm
     n.(okay cancel).Active←0
     #.CursorObj←1
     SavePropsInRegistry
     G←SaveGuiValuesIn n G
     ref←ProcessPaths ⍬
     :If CopyWorkspaces ref
         #.CursorObj←0
         n.info.Text←'Processing...'
         buff←⎕SE.HoldWorkspaces⍎¨G.(nickname1 nickname2)
         parms←##.Compare.CreateMergeParms
         parms.readOnly←1 1
         parms.ignoreTatin←G.ignoreTatin
         parms.refsAreRubbish←1
         parms.dropFromTitle←(1+≢'⎕SE.HoldWorkspaces.')  ⍝ +1 because of the leading "_"
         parms.n←n
         parms ##.Compare.Merge buff
         ⎕NQ n.theForm'Close'
         ⎕←'Both workspaces are still available in ⎕SE.HoldWorkspaces!'
         ⎕←'In order to get rid of them execute:'
         ⎕←')erase  ⎕SE.HoldWorkspaces'
     :Else
         ⎕SE.⎕EX'HoldWorkspaces'
     :EndIf
 :EndIf
⍝Done
